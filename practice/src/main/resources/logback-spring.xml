<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true" scan="true">
    <include resource="org/springframework/boot/logging/logback/defaults.xml" />
    <include resource="org/springframework/boot/logging/logback/console-appender.xml" />
    
    <!-- <property name="LOG_DIR" value="/eduApp/logs" /> -->
    <property name="LOG_DIR" value="/var/log/tomcat8" />
    <property name="SERVER_NAME" value="onmomtouch-bo-syncer"/>
    <property name="LOG_PATH_NAME" value="${LOG_DIR}/${SERVER_NAME}" />
    <property name="FILE_NAME" value="collectionServer" /> 
 
    <!-- FILE Appender -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH_NAME}/${FILE_NAME}.log</file>
        <!-- 일자별 로그파일 저장 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH_NAME}/${FILE_NAME}_%d{yyyyMMdd}.log</fileNamePattern>
            <!-- 일자별 로그파일 저장 기간 설정 -->
            <maxHistory>30</maxHistory> 
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%-5p] [%F]%M\(%L\) : %m%n</pattern>
        </encoder>
    </appender>
 
    <appender name="AM_MSD_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH_NAME}/AM/${FILE_NAME}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH_NAME}/AM/${FILE_NAME}_%d{yyyyMMdd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} : %m%n</pattern>
        </encoder>
    </appender>
    
    <appender name="BM_MSD_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH_NAME}/BM/${FILE_NAME}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH_NAME}/BM/${FILE_NAME}_%d{yyyyMMdd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} : %m%n</pattern>
        </encoder>
    </appender>
     
    <!-- AM 수집 로그 파일 저장 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <!-- [2018-08-17] [15:24:21.355] [log level] [logName]      [class.java line]       [message] -->
            <!--     날짜           시간       로그레벨    로거이름   로그인클래스.java 몇번째줄    로그메세지 -->
            <pattern>[%d{yyyy-MM-dd}] [%d{HH:mm:ss.SSS}] [%p] [%c{1}] [%F:%L [%m]%n</pattern>
        </layout>
    </appender>
    
    <logger name="com.example.demo.resource" additivity="FALSE">
        <level value="ERROR" /> DEBUG
        <appender-ref ref="AM_MSD_FILE" />
    </logger>
    
    <!-- BM 수집 로그 파일 저장 -->
    <!-- <logger name="com.example.demo" level="OFF"/> -->
    <logger name="com.example.demo" additivity="FALSE">
        <level value="ERROR" /> DEBUG
        <appender-ref ref="BM_MSD_FILE" />
    </logger>
    
	<!-- log4jdbc 옵션 설정 --> 
	<logger name="jdbc" level="OFF"/> 

	<!-- 커넥션 open close 이벤트를 로그로 남긴다. --> 
	<logger name="jdbc.connection" level="OFF"/> 

	<!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. --> 
<!-- 	<logger name="jdbc.sqlonly" level="INFO" additivity="false">
	    <appender-ref ref="STDOUT" />
	</logger> -->
	<logger name="jdbc.sqlonly" level="OFF"/>

	<!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. --> <!-- DEBUG -->
	<logger name="jdbc.sqltiming" level="OFF"/>
	<!-- <logger name="jdbc.sqltiming" level="ERROR" additivity="false">
	    <appender-ref ref="STDOUT" />
	</logger> -->
	
	<!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. --> 
	<logger name="jdbc.audit" level="OFF"/> 

	<!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. --> 
	<logger name="jdbc.resultset" level="OFF"/> 

	<!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. --> 
	<logger name="jdbc.resultsettable" level="OFF"/>
	<!-- <logger name="jdbc.resultsettable" level="INFO" additivity="false">
	    <appender-ref ref="STDOUT" />
	</logger>  -->
     
    <!-- 모든 로그 출력 (파일/콘솔) -->  <!-- DEBUG -->
    <root level="ERROR">
        <appender-ref ref="FILE"/>
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>